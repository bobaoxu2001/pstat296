par(mfrow=c(1,2))
acf(res1,lag.max=60, main = "")
pacf(res1,lag.max=60, main = "")
# Perform test on Model 1's residual
shapiro.test(res1)
Box.test(res1,lag = 20, type = c("Box-Pierce"),fitdf = 2) Box.test(res1,lag = 20, type = c("Ljung-Box"),fitdf = 2) Box.test(res1ˆ2,lag = 20, type = c("Ljung-Box"),fitdf = 0) ar(res1,aic=TRUE,order.max=NULL, mehod = c("yule-walker"))
# Perform test on Model 1's residual
sqrt(389)
shapiro.test(res1)
Box.test(res1,lag = 20, type = c("Box-Pierce"),fitdf = 2)
Box.test(res1,lag = 20, type = c("Ljung-Box"),fitdf = 2)
Box.test(res1ˆ2,lag = 20, type = c("Ljung-Box"),fitdf = 0)
# Perform test on Model 1's residual
shapiro.test(res1)
Box.test(res1,lag = 20, type = c("Box-Pierce"),fitdf = 2)
Box.test(res1,lag = 20, type = c("Ljung-Box"),fitdf = 2)
Box.test(res1^2,lag = 20, type = c("Ljung-Box"),fitdf = 0)
ar(res1,aic=TRUE,order.max=NULL, mehod = c("yule-walker"))
# Perform test on Model 1's residual
shapiro.test(res1)
Box.test(res1,lag = 20, type = c("Box-Pierce"),fitdf = 1)
Box.test(res1,lag = 20, type = c("Ljung-Box"),fitdf = 1)
Box.test(res1^2,lag = 20, type = c("Ljung-Box"),fitdf = 0)
ar(res1,aic=TRUE,order.max=NULL, mehod = c("yule-walker"))
arima(c_train.bc, order = c(2,1,2), method = "ML")
arima(c_train.bc, order = c(2,1,2),fixed=c(NA,0,NA,NA), method = "ML")
arima(c_train.bc, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML")
AICc(arima(c_train.bc, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML"))
AICc(arima(c_train.bc.1, order=c(2,1,2), method="ML"))
AICc(arima(c_train.bc, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML"))
# Plot the residuals
fit1 <- arima(c_train, order = c(0,0,2),
seasonal = list(order = c(0,0,2), period = 12), method = "ML")
res1 <- residuals(fit1)
plot.ts(res1, xlab = "")
abline(h=mean(res1),col = "blue")
# Plot the histogram, Q-Q normal plot of the residual par(mfrow=c(1,2))
hist(res1, density = 20, breaks = 20,
col = "blue", xlab = "", prob = TRUE, main = "")
m1 <- mean(res1)
std1 <- sqrt(var(res1))
curve(dnorm(x,m1,std1),add = TRUE)
qqnorm(res1,main = "", xlab = "")
qqline(res1, col = "blue")
# Plot the ACF and PACF of the residual
par(mfrow=c(1,2))
acf(res1,lag.max=60, main = "")
pacf(res1,lag.max=60, main = "")
# Perform test on Model 1's residual
shapiro.test(res1)
Box.test(res1,lag = 20, type = c("Box-Pierce"),fitdf = 1)
Box.test(res1,lag = 20, type = c("Ljung-Box"),fitdf = 1)
Box.test(res1^2,lag = 20, type = c("Ljung-Box"),fitdf = 0)
ar(res1,aic=TRUE,order.max=NULL, mehod = c("yule-walker"))
# Plot the residuals
fit1 <- arima(c_train, order = c(0,0,2),
seasonal = list(order = c(0,0,2), period = 12), method = "ML")
res1 <- residuals(fit1)
plot.ts(res1, xlab = "")
abline(h=mean(res1),col = "blue")
# Plot the histogram, Q-Q normal plot of the residual par(mfrow=c(1,2))
hist(res1, density = 20, breaks = 20,
col = "blue", xlab = "", prob = TRUE, main = "")
m1 <- mean(res1)
std1 <- sqrt(var(res1))
curve(dnorm(x,m1,std1),add = TRUE)
qqnorm(res1,main = "", xlab = "")
qqline(res1, col = "blue")
# Plot the ACF and PACF of the residual
par(mfrow=c(1,2))
acf(res1,lag.max=60, main = "")
pacf(res1,lag.max=60, main = "")
# Plot the residuals
fit2 <- arima(c_train, order = c(2,1,2),
seasonal = list(order = c(2,1,2), period = 12), method = "ML")
# Plot the residuals
fit2 <- arima(c_train, order = c(2,1,2), method = "ML")
res2 <- residuals(fit1)
plot.ts(res2, xlab = "")
abline(h=mean(res2),col = "blue")
# Plot the histogram, Q-Q normal plot of the residual par(mfrow=c(1,2))
hist(res2, density = 20, breaks = 20,
col2 = "blue", xlab = "", prob = TRUE, main = "")
m2 <- mean(res2)
std2 <- sqrt(var(res2))
curve(dnorm(x,m2,std2),add = TRUE)
qqnorm(res2,main = "", xlab = "")
qqline(res2, col = "blue")
# Plot the ACF and PACF of the residual
par(mfrow=c(1,2))
acf(res2,lag.max=60, main = "")
pacf(res2,lag.max=60, main = "")
# Perform test on Model 1's residual
shapiro.test(res2)
Box.test(res2,lag = 20, type = c("Box-Pierce"),fitdf = 2)
Box.test(res2,lag = 20, type = c("Ljung-Box"),fitdf = 2)
Box.test(res2^2,lag = 20, type = c("Ljung-Box"),fitdf = 0)
ar(res1,aic=TRUE,order.max=NULL, mehod = c("yule-walker"))
# Perform test on Model 1's residual
shapiro.test(res1)
Box.test(res1,lag = 20, type = c("Box-Pierce"),fitdf = 1)
Box.test(res1,lag = 20, type = c("Ljung-Box"),fitdf = 1)
Box.test(res1^2,lag = 20, type = c("Ljung-Box"),fitdf = 0)
ar(res1,aic=TRUE,order.max=NULL, mehod = c("yule-walker"))
# Plot the residuals
fit2 <- arima(c_train, order = c(2,1,2), method = "ML")
res2 <- residuals(fit1)
plot.ts(res2, xlab = "")
abline(h=mean(res2),col = "blue")
# Plot the histogram, Q-Q normal plot of the residual par(mfrow=c(1,2))
hist(res2, density = 20, breaks = 20,
col2 = "blue", xlab = "", prob = TRUE, main = "")
m2 <- mean(res2)
std2 <- sqrt(var(res2))
curve(dnorm(x,m2,std2),add = TRUE)
qqnorm(res2,main = "", xlab = "")
qqline(res2, col = "blue")
# Plot the ACF and PACF of the residual
par(mfrow=c(1,2))
acf(res2,lag.max=60, main = "")
# Plot the residuals
fit2 <- arima(c_train, order = c(2,1,2), method = "ML")
res2 <- residuals(fit2)
plot.ts(res2, xlab = "")
abline(h=mean(res2),col = "blue")
# Plot the histogram, Q-Q normal plot of the residual par(mfrow=c(1,2))
hist(res2, density = 20, breaks = 20,
col2 = "blue", xlab = "", prob = TRUE, main = "")
m2 <- mean(res2)
std2 <- sqrt(var(res2))
curve(dnorm(x,m2,std2),add = TRUE)
qqnorm(res2,main = "", xlab = "")
qqline(res2, col = "blue")
# Plot the ACF and PACF of the residual
par(mfrow=c(1,2))
acf(res2,lag.max=60, main = "")
pacf(res2,lag.max=60, main = "")
arima(c_train.bc, order = c(2,1,2), method = "ML")
arima(c_train.bc, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML")
AICc(arima(c_train.bc.1, order=c(2,1,2), method="ML"))
AICc(arima(c_train.bc, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML"))
# Plot the residuals
fit2 <- arima(c_train, order = c(2,1,2), method = "ML")
res2 <- residuals(fit2)
plot.ts(res2, xlab = "")
abline(h=mean(res2),col = "blue")
# Plot the histogram, Q-Q normal plot of the residual par(mfrow=c(1,2))
hist(res2, density = 20, breaks = 20,
col2 = "blue", xlab = "", prob = TRUE, main = "")
m2 <- mean(res2)
std2 <- sqrt(var(res2))
curve(dnorm(x,m2,std2),add = TRUE)
qqnorm(res2,main = "", xlab = "")
qqline(res2, col = "blue")
# Plot the ACF and PACF of the residual
par(mfrow=c(1,2))
acf(res2,lag.max=60, main = "")
pacf(res2,lag.max=60, main = "")
# Perform test on Model 1's residual
shapiro.test(res2)
Box.test(res2,lag = 20, type = c("Box-Pierce"),fitdf = 2)
Box.test(res2,lag = 20, type = c("Ljung-Box"),fitdf = 2)
Box.test(res2^2,lag = 20, type = c("Ljung-Box"),fitdf = 0)
ar(res1,aic=TRUE,order.max=NULL, mehod = c("yule-walker"))
fit.1<-arima(c_train, order = c(0,0,2), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.1, n.ahead = 12)
U = pred.tr$pred + 2*pred.tr$se
L = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U, col = "blue", lty = "dashed")
lines(L, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Zoom in graph
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,,max(U1)))
fit.1<-arima(c_train, order = c(0,0,2), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.1, n.ahead = 12)
U = pred.tr$pred + 2*pred.tr$se
L = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U, col = "blue", lty = "dashed")
lines(L, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Zoom in graph
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,max(U1)))
fit.1<-arima(c_train, order = c(0,0,2), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.1, n.ahead = 12)
U1 = pred.tr$pred + 2*pred.tr$se
L1 = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U1, col = "blue", lty = "dashed")
lines(L1, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Zoom in graph
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,max(U1)))
lines(U1, col = "blue", lty = "dashed")
lines(L1, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Forecast with test dataset
plot.ts(milk, xlim = c(1990,2022), ylim = c(1,max(U1)))
lines(U1, col = "blue", lty = "dashed")
lines(L1, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
legend("bottomright", c("Prediction","95% C.I.","c_test"),
fill = c("red", "blue","slategrey"), cex = 1.25)
fit.1<-arima(c_train, order = c(0,0,2), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.1, n.ahead = 12)
U1 = pred.tr$pred + 2*pred.tr$se
L1 = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U1, col = "blue", lty = "dashed")
lines(L1, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I.")
fill = c("red", "blue"), cex = 1.25) # Zoom in graph
fit.1<-arima(c_train, order = c(0,0,2), fixed=c(0,NA,NA), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.1, n.ahead = 12)
U1 = pred.tr$pred + 2*pred.tr$se
L1 = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U1, col = "blue", lty = "dashed")
lines(L1, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Zoom in graph
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,max(U1)))
lines(U1, col = "blue", lty = "dashed")
lines(L1, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Forecast with test dataset
plot.ts(milk, xlim = c(1990,2022), ylim = c(1,max(U1)))
lines(U1, col = "blue", lty = "dashed")
lines(L1, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
legend("bottomright", c("Prediction","95% C.I.","c_test"),
fill = c("red", "blue","slategrey"), cex = 1.25)
arima(c_train.bc, order = c(2,1,2), method = "ML")
arima(c_train.bc, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML")
AICc(arima(c_train.bc.1, order=c(2,1,2), method="ML"))
AICc(arima(c_train.bc.1, order=c(2,1,2), method="ML"))
AICc(arima(c_train.bc, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML"))
# Plot the residuals
fit2 <- arima(c_train, order = c(2,1,2), fixed=c(NA,0,NA,0),method = "ML")
res2 <- residuals(fit2)
plot.ts(res2, xlab = "")
abline(h=mean(res2),col = "blue")
# Plot the histogram, Q-Q normal plot of the residual par(mfrow=c(1,2))
hist(res2, density = 20, breaks = 20,
col2 = "blue", xlab = "", prob = TRUE, main = "")
m2 <- mean(res2)
std2 <- sqrt(var(res2))
curve(dnorm(x,m2,std2),add = TRUE)
qqnorm(res2,main = "", xlab = "")
qqline(res2, col = "blue")
# Plot the ACF and PACF of the residual
par(mfrow=c(1,2))
acf(res2,lag.max=60, main = "")
pacf(res2,lag.max=60, main = "")
# Perform test on Model 1's residual
shapiro.test(res2)
Box.test(res2,lag = 20, type = c("Box-Pierce"),fitdf = 2)
Box.test(res2,lag = 20, type = c("Ljung-Box"),fitdf = 2)
Box.test(res2^2,lag = 20, type = c("Ljung-Box"),fitdf = 0)
ar(res1,aic=TRUE,order.max=NULL, mehod = c("yule-walker"))
fit.2<-arima(c_train, order = c(2,1,2), fixed=c(0,NA,NA), method = "ML")
# Plot the residuals
fit2 <- arima(c_train, order = c(2,1,2), c(NA,0,NA,0),method = "ML")
# Plot the residuals
fit2 <- arima(c_train.bc, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML")
res2 <- residuals(fit2)
plot.ts(res2, xlab = "")
abline(h=mean(res2),col = "blue")
# Plot the histogram, Q-Q normal plot of the residual par(mfrow=c(1,2))
hist(res2, density = 20, breaks = 20,
col2 = "blue", xlab = "", prob = TRUE, main = "")
m2 <- mean(res2)
std2 <- sqrt(var(res2))
curve(dnorm(x,m2,std2),add = TRUE)
qqnorm(res2,main = "", xlab = "")
qqline(res2, col = "blue")
# Plot the ACF and PACF of the residual
par(mfrow=c(1,2))
acf(res2,lag.max=60, main = "")
pacf(res2,lag.max=60, main = "")
fit.2<-arima(c_train, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.1, n.ahead = 12)
U2 = pred.tr$pred + 2*pred.tr$se
L2 = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Zoom in graph
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,max(U1)))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Forecast with test dataset
plot.ts(milk, xlim = c(1990,2022), ylim = c(1,max(U1)))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
legend("bottomright", c("Prediction","95% C.I.","c_test"),
fill = c("red", "blue","slategrey"), cex = 1.25)
fit.2<-arima(c_train, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.1, n.ahead = 12)
U2 = pred.tr$pred + 2*pred.tr$se
L2 = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Zoom in graph
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,max(U2)))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Forecast with test dataset
plot.ts(milk, xlim = c(1990,2022), ylim = c(1,max(U2)))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
legend("bottomright", c("Prediction","95% C.I.","c_test"),
fill = c("red", "blue","slategrey"), cex = 1.25)
fit.2<-arima(c_train, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.1, n.ahead = 12)
U2 = pred.tr$pred + 2*pred.tr$se
L2 = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Zoom in graph
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,max(U2)))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fit.2<-arima(c_train, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.1, n.ahead = 12)
U2 = pred.tr$pred + 2*pred.tr$se
L2 = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Zoom in graph
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,max(U2)))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I.")
# Plot the residuals
fit2 <- arima(c_train.bc, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML")
res2 <- residuals(fit2)
plot.ts(res2, xlab = "")
abline(h=mean(res2),col = "blue")
# Plot the histogram, Q-Q normal plot of the residual par(mfrow=c(1,2))
hist(res2, density = 20, breaks = 20,
col2 = "blue", xlab = "", prob = TRUE, main = "")
m2 <- mean(res2)
std2 <- sqrt(var(res2))
curve(dnorm(x,m2,std2),add = TRUE)
qqnorm(res2,main = "", xlab = "")
qqline(res2, col = "blue")
# Plot the ACF and PACF of the residual
par(mfrow=c(1,2))
acf(res2,lag.max=60, main = "")
pacf(res2,lag.max=60, main = "")
# Perform test on Model 1's residual
shapiro.test(res2)
Box.test(res2,lag = 20, type = c("Box-Pierce"),fitdf = 2)
Box.test(res2,lag = 20, type = c("Ljung-Box"),fitdf = 2)
Box.test(res2^2,lag = 20, type = c("Ljung-Box"),fitdf = 0)
ar(res1,aic=TRUE,order.max=NULL, mehod = c("yule-walker"))
fit.2<-arima(c_train, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.2, n.ahead = 12)
U2 = pred.tr$pred + 2*pred.tr$se
L2 = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Zoom in graph
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,max(U2)))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Forecast with test dataset
plot.ts(milk, xlim = c(1990,2022), ylim = c(1,max(U2)))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
legend("bottomright", c("Prediction","95% C.I.","c_test"),
fill = c("red", "blue","slategrey"), cex = 1.25)
fit.2<-arima(c_train, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.2, n.ahead = 12)
U2 = pred.tr$pred + 2*pred.tr$se
L2 = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Zoom in graph
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
legend("bottomright", c("Prediction","95% C.I."),
fill = c("red", "blue"), cex = 1.25) # Forecast with test dataset
plot.ts(milk, xlim = c(1990,2022), ylim = c(1,10))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
legend("bottomright", c("Prediction","95% C.I.","c_test"),
fill = c("red", "blue","slategrey"), cex = 1.25)
fit.2<-arima(c_train, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.2, n.ahead = 12)
U2 = pred.tr$pred + 2*pred.tr$se
L2 = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1),
fit.2<-arima(c_train, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.2, n.ahead = 12)
U2 = pred.tr$pred + 2*pred.tr$se
L2 = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1),
fit.2<-arima(c_train, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.2, n.ahead = 12)
U2 = pred.tr$pred + 2*pred.tr$se
L2 = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
fill = c("red", "blue"), cex = 1.25),
fit.2<-arima(c_train, order = c(2,1,2),fixed=c(NA,0,NA,0), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.2, n.ahead = 12)
U2 = pred.tr$pred + 2*pred.tr$se
L2 = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(1,10))
lines(U2, col = "blue", lty = "dashed")
lines(L2, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
fill = c("red", "blue"), cex = 1.25),
library(tsdl)
library(forecast)
library(tidyverse)
library(astsa)
library(MASS)
library(ggplot2)
library(readxl)
library(ggfortify)
library(forecast)
library(GeneCycle)
library(qpcR)
require(TSA)
#source("plot.roots.R")
