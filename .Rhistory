plot(tsdata.bc)
# Plot and compare the two:
par(mfrow=c(2,3))
plot.ts(tsdata,xlab = "", main = "")
hist(tsdata, col = "light blue", xlab = "", main = "")
qqnorm(tsdata, main = "", xlab = "")
qqline(tsdata, col = "red")
plot.ts(tsdata.bc,xlab = "", main = "")
hist(tsdata.bc, col = "light blue", xlab = "", main = "")
qqnorm(tsdata.bc, main = "", xlab = "")
qqline(tsdata.bc, col = "red")
#y1 <- ts(as.ts(train),frequency = 12)
#decomp1 <- decompose(tsdata)
#plot(decomp1)
decomp <- decompose(tsdata.bc)
plot(decomp)
# Deseasonlize:
tsdata.bc.12 <- diff(tsdata.bc, 12)
tsdata.bc.12.1 <- diff(tsdata.bc.12, 1)
tsdata.bc.12.1.1 <- diff(tsdata.bc.12.1, 1)
var(tsdata.bc)
var(tsdata.bc.12);
var(tsdata.bc.12.1);
var(tsdata.bc.12.1.1)
hist(tsdata.bc.12.1, col = "light blue", xlab = "", main = "")
# Plot it for De-seasonlized Time Series :
par(mfrow=c(1, 1))
ts.plot(tsdata.bc.12.1, main="De-seasonlized Time Series",
ylab=expression(nabla[1]~nabla[12]~Y[t]))
abline(h=mean(tsdata.bc.12.1), lty=2)
library(forecast)
auto.arima(tsdata.bc.12.1,ic = c("aicc"),seasonal = T,stepwise = F,parallel = T)
# Compare the ACF and PACF of tsdata.12.1
par(mfrow=c(2,3))
#acf(train, lag.max = 60, main = expression(U[t]))
#acf(tsdata.12, lag.max = 60, main = expression(nabla[12]~~U[t]))
acf(tsdata.bc.12.1, lag.max = 60, main = expression(nabla[1]~nabla[12]~~U[t]))
#pacf(train, lag.max = 60, main = "")
#pacf(tsdata.12, lag.max = 60, main = "")
pacf(tsdata.bc.12.1, lag.max = 60, main = "")
# Calculate the AICc of possible models
a1 <- AICc(arima(tsdata.bc, order = c(0,1,0),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
a2 <- AICc(arima(tsdata.bc, order = c(0,1,0),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
a3 <- AICc(arima(tsdata.bc, order = c(0,1,0),
seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
a4 <- AICc(arima(tsdata.bc, order = c(0,1,0),
seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
a5 <- AICc(arima(tsdata.bc, order = c(0,1,1),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
a6 <- AICc(arima(tsdata.bc, order = c(0,1,1),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
a7 <- AICc(arima(tsdata.bc, order = c(0,1,1),
seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
a8 <- AICc(arima(tsdata.bc, order = c(0,1,1),
seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
a9 <- AICc(arima(tsdata.bc, order = c(0,1,2),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
a10 <- AICc(arima(tsdata.bc, order = c(0,1,2),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
a11 <- AICc(arima(tsdata.bc, order = c(0,1,2),
seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
a12 <- AICc(arima(tsdata.bc, order = c(0,1,2),
seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
b1 <- AICc(arima(tsdata.bc, order = c(1,1,0),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
b2 <- AICc(arima(tsdata.bc, order = c(1,1,0),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
b3 <- AICc(arima(tsdata.bc, order = c(1,1,0),
seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
b4 <- AICc(arima(tsdata.bc, order = c(1,1,0),
seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
b5 <- AICc(arima(tsdata.bc, order = c(1,1,1),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
b6 <- AICc(arima(tsdata.bc, order = c(1,1,1),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
#b7 <- AICc(arima(tsdata.bc, order = c(1,1,1),
#seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
#b8 <- AICc(arima(tsdata.bc, order = c(1,1,1),
#seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
b9 <- AICc(arima(tsdata.bc, order = c(1,1,2),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
b10 <- AICc(arima(tsdata.bc, order = c(1,1,2),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
#b11 <- AICc(arima(tsdata.bc, order = c(1,1,2),
#seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
b12 <- AICc(arima(tsdata.bc, order = c(1,1,2),
seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
c1 <- AICc(arima(tsdata.bc, order = c(2,1,0),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
c2 <- AICc(arima(tsdata.bc, order = c(2,1,0),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
c3 <- AICc(arima(tsdata.bc, order = c(2,1,0),
seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
c4 <- AICc(arima(tsdata.bc, order = c(2,1,0),
seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
c5 <- AICc(arima(tsdata.bc, order = c(2,1,1),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
c6 <- AICc(arima(tsdata.bc, order = c(2,1,1),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
c7 <- AICc(arima(tsdata.bc, order = c(2,1,1),
seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
c8 <- AICc(arima(tsdata.bc, order = c(2,1,1),
seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
c9 <- AICc(arima(tsdata.bc, order = c(2,1,2),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
c10 <- AICc(arima(tsdata.bc, order = c(2,1,2),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
c11 <- AICc(arima(tsdata.bc, order = c(2,1,2),
seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
c12 <- AICc(arima(tsdata.bc, order = c(2,1,2),
seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/xuao/Documents/PSTAT296A/pstat296")
library(tsdl)
library(forecast)
library(tidyverse)
library(astsa)
library(MASS)
library(ggplot2)
library(readxl)
library(ggfortify)
library(forecast)
library(GeneCycle)
library(qpcR)
require(TSA)
#source("plot.roots.R")
setwd("/Users/xuao/Documents/PSTAT296A/pstat296")
library(tsdl)
library(forecast)
library(tidyverse)
library(astsa)
library(MASS)
library(ggplot2)
library(readxl)
library(ggfortify)
library(forecast)
library(GeneCycle)
library(qpcR)
require(TSA)
#source("plot.roots.R")
rm(list = ls())
rm(list = ls())
TR26_21 <- read_excel("/Users/xuao/Documents/PSTAT296A/pstat296/2022-11.11/SBBI Data for Capital Markets (2022_11_11).xlsx", sheet="Processed")
colnames(TR26_21) <- c("Observed Month", "Large Cap TR", "LT Govt TR 20 YR","IT Govt TR 5 YR","LT Corp TR 20 YR","T-Bill TR 30 DAY","US CPI/ INFLATION","LT Govt Yield 20 YEAR","IT Govt Yield 5 YEAR")
TR26_21 <- TR26_21 %>%
filter(!row_number() %in% c(1:5)) %>%
janitor::clean_names()
TR26_21 <- as.data.frame(sapply(TR26_21, as.numeric))
TR26_21 <- TR26_21 %>%
mutate(observed_month = as.Date(observed_month,origin = "1899-12-30"))
TR26_21
Govt_20_Yield <- TR26_21[,c(1,8)]
Govt_20_Yield$yield_percentage <- round(Govt_20_Yield$lt_govt_yield_20_year*100, digits = 3)
#Govt_20_Yield$yield_percentage
summary(Govt_20_Yield$yield_percentage)
plot(Govt_20_Yield$yield_percentage,type="l",)
# Since there is a big difference between the time before index 769 (1990.01) and after that
# So we choose to research in the data after index 709
# Divide it into train and test for nearly 90% and 10%
train <- Govt_20_Yield$yield_percentage[769:1149]
test <- Govt_20_Yield$yield_percentage[1153:1161]
#train set contains data points from 1990.01 to 2021.12, 381 points totally
#test set contains data points from 2022.1 and 2022.9, 9 points totally
par(mfrow=c(2, 1))
tsdata <- ts(train, frequency = 12, start = c(1990,1,1))
c_test <-ts(test,frequency = 12,start = c(2022,1))
ts.plot(tsdata)
ts.plot(c_test)
par(mfrow=c(3, 1))
data <- ts(Govt_20_Yield$yield_percentage[769:1161], frequency = 12, start = c(1990,1,1))
tsdata <- ts(train, frequency = 12, start = c(1990,1,1))
c_test <-ts(test,frequency = 12,start = c(2022,1))
ts.plot(tsdata)
ts.plot(c_test)
par(mfrow=c(3, 1))
data <- ts(Govt_20_Yield$yield_percentage[769:1161], frequency = 12, start = c(1990,1,1))
c_train <- ts(train, frequency = 12, start = c(1990,1,1))
c_test <-ts(test,frequency = 12,start = c(2022,1))
ts.plot(data)
ts.plot(c_train)
ts.plot(c_test)
hist(c_train, main="Histogram",
xlab="date")
acf(train, lag.max = 40, main = "")
# Box-Cox transformation:
t <- 1:length(c_train)
bcTransform <- boxcox(c_train ~ t, plotit=TRUE)
lambda <- bcTransform$x[which.max(bcTransform$y)]
c_train.bc = (1/lambda)*(c_train^lambda-1)
lambda
plot(c_train.bc)
# Plot and compare the two:
par(mfrow=c(2,3))
plot.ts(c_train,xlab = "", main = "")
hist(c_train, col = "light blue", xlab = "", main = "")
qqnorm(c_train, main = "", xlab = "")
qqline(c_train, col = "red")
plot.ts(c_train.bc,xlab = "", main = "")
hist(c_train.bc, col = "light blue", xlab = "", main = "")
qqnorm(c_train.bc, main = "", xlab = "")
qqline(c_train.bc, col = "red")
#y1 <- ts(as.ts(train),frequency = 12)
#decomp1 <- decompose(c_train)
#plot(decomp1)
decomp <- decompose(c_train.bc)
plot(decomp)
# Deseasonlize:
c_train.bc.12 <- diff(c_train.bc, 12)
c_train.bc.12.1 <- diff(c_train.bc.12, 1)
c_train.bc.12.1.1 <- diff(c_train.bc.12.1, 1)
var(c_train.bc)
var(c_train.bc.12);
var(c_train.bc.12.1);
var(c_train.bc.12.1.1)
hist(c_train.bc.12.1, col = "light blue", xlab = "", main = "")
# Plot it for De-seasonlized Time Series :
par(mfrow=c(1, 1))
ts.plot(c_train.bc.12.1, main="De-seasonlized Time Series",
ylab=expression(nabla[1]~nabla[12]~Y[t]))
abline(h=mean(c_train.bc.12.1), lty=2)
decomp1 <- decompose(data)
plot(decomp1)
decomp <- decompose(c_train.bc)
plot(decomp)
decomp1 <- decompose(c_train)
plot(decomp1)
decomp <- decompose(c_train.bc)
plot(decomp)
decomp <- decompose(c_train.bc)
plot(decomp)
# Plot it for De-seasonlized Time Series :
par(mfrow=c(1, 1))
ts.plot(c_train.bc.12.1, main="De-seasonlized Time Series",
ylab=expression(nabla[1]~nabla[12]~Y[t]))
abline(h=mean(c_train.bc.12.1), lty=2)
acf(c_train.bc.12.1, lag.max=40, main="ACF")
acf(c_train.bc.12.1, lag.max=120, main="ACF")
acf(c_train.bc.12.1, lag.max=120, main="ACF")
pacf(c_train.bc.12.1, lag.max=120, main="ACF")
library(forecast)
auto.arima(c_train.bc.12.1,ic = c("aicc"),seasonal = T,stepwise = F)
arima((c_train.bc.12.1, order=c(0,0,2), seasonal = list(order = c(2,0,0), period = 12), method="ML")
arima((c_train.bc.12.1,order=c(0,0,2),seasonal = list(order = c(2,0,0),period = 12), method="ML")
arima((c_train.bc.12.1, order=c(0,0,2), seasonal = list(order = c(2,0,0), period = 12), method="ML")
arima((c_train.bc.12.1, order=c(0,0,2), seasonal = list(order = c(2,0,0), period = 12), method="ML")
arima((c_train.bc.12.1,order=c(0,0,2), seasonal = list(order = c(2,0,0), period = 12), method="ML")
arima(c_train.bc.12.1,order=c(0,0,2), seasonal = list(order = c(2,0,0), period = 12), method="ML")
AICc(arima(c_train.bc.12.1, order=c(0,0,2), seasonal = list(order = c(2,0,0), period = 12), method="ML"));
arima(c_train.bc.12.1, order=c(0,0,2), seasonal = list(order = c(2,0,0), period = 12), fixed = c(0, NA, NA, NA),method="ML")
arima(c_train.bc.12.1, order=c(0,0,2), seasonal = list(order = c(2,0,0), period = 12), fixed=c(0, NA, NA, NA), method="ML")
arima(c_train.bc.12.1, order=c(0,0,2), seasonal = list(order = c(2,0,0), period = 12), fixed=c(0,NA,NA, NA, NA), method="ML")
AICc(arima(apt.log, order=c(0,0,2), seasonal = list(order = c(2,0,0), period = 12), fixed = c(0, NA,NA,NA,NA), method="ML"))
AICc(arima(c_train.bc.12.1, order=c(0,0,2), seasonal = list(order = c(2,0,0), period = 12), fixed = c(0, NA,NA,NA,NA), method="ML"))
AICc(arima(c_train.bc.12.1, order=c(0,1,2), seasonal = list(order = c(2,1,0), period = 12), fixed = c(0, NA,NA,NA,NA), method="ML"))
AICc(arima(c_train.bc.12.1, order=c(0,0,2), seasonal = list(order = c(2,0,0), period = 12), fixed = c(0, NA,NA,NA,NA), method="ML"))
# Compare the ACF and PACF of c_train.12.1
par(mfrow=c(2,3))
#acf(train, lag.max = 60, main = expression(U[t]))
#acf(c_train.12, lag.max = 60, main = expression(nabla[12]~~U[t]))
acf(c_train.bc.12.1, lag.max = 60, main = expression(nabla[1]~nabla[12]~~U[t]))
#pacf(train, lag.max = 60, main = "")
#pacf(c_train.12, lag.max = 60, main = "")
pacf(c_train.bc.12.1, lag.max = 60, main = "")
arima(c_train.bc, order = c(0,0,2), seasonal = list(order = c(2,0,0), period = 12), method = "ML")
fit.1<-arima(c_train, order = c(0,0,2),
seasonal = list(order = c(0,1,1), period = 12), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.1, n.ahead = 93)
U.tr = pred.tr$pred + 2*pred.tr$se
L.tr = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1984,2022), ylim = c(0,13))
lines(U.tr, col = "blue", lty = "dashed")
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
fit.1<-arima(c_train, order = c(0,0,2),
seasonal = list(order = c(0,1,1), period = 12), method = "ML")
# Create confidence interval
pred.tr <- predict(fit.1, n.ahead = 93)
U.tr = pred.tr$pred + 2*pred.tr$se
L.tr = pred.tr$pred - 2*pred.tr$se
# Forecast on original data
plot.ts(c_train, xlim = c(1990,2022), ylim = c(0,13))
lines(U.tr, col = "blue", lty = "dashed")
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
# Zoom in graph
par(mfrow=c(1,2))
plot.ts(c_train, xlim = c(2021,2022), ylim = c(1,5))
lines(U.tr, col = "blue", lty = "dashed")
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
# Zoom in graph
par(mfrow=c(1,2))
plot.ts(c_train, xlim = c(2018,2022), ylim = c(1,4))
lines(U.tr, col = "blue", lty = "dashed")
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
# Zoom in graph
par(mfrow=c(1,2))
plot.ts(c_train, xlim = c(2018,2024), ylim = c(1,4))
lines(U.tr, col = "blue", lty = "dashed")
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
# Zoom in graph
par(mfrow=c(1,2))
plot.ts(c_train, xlim = c(2018,2023), ylim = c(1,4))
lines(U.tr, col = "blue", lty = "dashed")
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
# Forecast with test dataset
plot.ts(c_test, xlim = c(2021,2022), ylim = c(1,5))
lines(U.tr, col = "blue", lty = "dashed")
lines(L.tr, col = "blue", lty = "dashed")
#points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
ts.plot(c_train, xlim = c(100,length(c_train)+12), ylim = c(250,max(U)), col="red")
ts.plot(c_train, xlim = c(100,length(c_train)+12), ylim = c(0,5, col="red")
lines(U, col="blue", lty="dashed")
ts.plot(c_train, xlim = c(100,length(c_train)+12), ylim = c(0,5), col="red")
lines(U, col="blue", lty="dashed")
ts.plot(c_train, xlim = c(100,length(c_train)+12), ylim = c(0,5), col="red")
lines(U.tr, col="blue", lty="dashed")
lines(L.tr, col="blue", lty="dashed")
points((length(apt)+1):(length(apt)+12), pred.orig, col="green")
ts.plot(c_train, xlim = c(100,length(c_train)+12), ylim = c(0,5), col="red")
lines(U.tr, col="blue", lty="dashed")
lines(L.tr, col="blue", lty="dashed")
points((length(c_train)+1):(c_train+12), pred.tr$pred, col="green")
# Forecast with test dataset
plot.ts(data, xlim = c(1990,2023), ylim = c(340,max(U.tr)))
lines(U.tr, col = "blue", lty = "dashed")
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
legend("bottomright", c("Prediction","95% C.I.","c_test"),
fill = c("red", "blue","slategrey"), cex = 1.25)
# Forecast with test dataset
plot.ts(data, xlim = c(1990,2023), ylim = c(0,5)
lines(U.tr, col = "blue", lty = "dashed")
# Forecast with test dataset
plot.ts(data, xlim = c(1990,2023), ylim = c(0,5))
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
legend("bottomright", c("Prediction","95% C.I.","c_test"),
fill = c("red", "blue","slategrey"), cex = 1.25)
# Forecast with test dataset
plot.ts(data, xlim = c(1990,2023), ylim = c(0,5))
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
fill = c("red", "blue","slategrey"), cex = 1.25)
# Forecast with test dataset
plot.ts(data, xlim = c(1990,2023), ylim = c(0,5))
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
legend("bottomright",fill = c("red", "blue","slategrey"), cex = 1.25)
# Forecast with test dataset
plot.ts(data, xlim = c(1990,2023), ylim = c(0,5))
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
legend("bottomright", c("Prediction","95% C.I.","c_test"),fill = c("red", "blue","slategrey"), cex = 1.25)
# Forecast with test dataset
plot.ts(data, xlim = c(1990,2023), ylim = c(0,5))
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
legend("bottomright",fill = c("red", "blue","slategrey"), cex = 1.25)
# Forecast with test dataset
plot.ts(data, xlim = c(1990,2023), ylim = c(0,5))
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
legend("bottomright", c("Prediction","95% C.I.","c_test"),fill = c("red", "blue","slategrey"), cex = 1.25)
# Forecast with test dataset
plot.ts(data, xlim = c(1990,2023), ylim = c(0,5))
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
# Forecast with test dataset
plot.ts(data, xlim = c(1990,2023), ylim = c(0,10))
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
# Forecast with test dataset
plot.ts(data, xlim = c(1990,2023), ylim = c(0,7))
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
# Forecast with test dataset
plot.ts(data, xlim = c(2015,2023), ylim = c(0,7))
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
# Forecast with test dataset
plot.ts(data, xlim = c(2015,2030), ylim = c(0,7))
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
# Forecast with test dataset
plot.ts(data, xlim = c(1990,2025), ylim = c(0,7))
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
# Forecast with test dataset
plot.ts(data, xlim = c(2000,2025), ylim = c(0,7))
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
# Forecast with test dataset
plot.ts(data, xlim = c(2010,2025), ylim = c(0,7))
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
# Calculate the AICc of possible models
a1 <- AICc(arima(c_train.bc, order = c(0,1,0),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
a2 <- AICc(arima(c_train.bc, order = c(0,1,0),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
a3 <- AICc(arima(c_train.bc, order = c(0,1,0),
seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
a4 <- AICc(arima(c_train.bc, order = c(0,1,0),
seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
a5 <- AICc(arima(c_train.bc, order = c(0,1,1),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
a6 <- AICc(arima(c_train.bc, order = c(0,1,1),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
a7 <- AICc(arima(c_train.bc, order = c(0,1,1),
seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
a8 <- AICc(arima(c_train.bc, order = c(0,1,1),
seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
a9 <- AICc(arima(c_train.bc, order = c(0,1,2),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
a10 <- AICc(arima(c_train.bc, order = c(0,1,2),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
a11 <- AICc(arima(c_train.bc, order = c(0,1,2),
seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
a12 <- AICc(arima(c_train.bc, order = c(0,1,2),
seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
b1 <- AICc(arima(c_train.bc, order = c(1,1,0),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
b2 <- AICc(arima(c_train.bc, order = c(1,1,0),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
b3 <- AICc(arima(c_train.bc, order = c(1,1,0),
seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
b4 <- AICc(arima(c_train.bc, order = c(1,1,0),
seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
b5 <- AICc(arima(c_train.bc, order = c(1,1,1),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
b6 <- AICc(arima(c_train.bc, order = c(1,1,1),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
#b7 <- AICc(arima(c_train.bc, order = c(1,1,1),
#seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
#b8 <- AICc(arima(c_train.bc, order = c(1,1,1),
#seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
b9 <- AICc(arima(c_train.bc, order = c(1,1,2),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
b10 <- AICc(arima(c_train.bc, order = c(1,1,2),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
#b11 <- AICc(arima(c_train.bc, order = c(1,1,2),
#seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
b12 <- AICc(arima(c_train.bc, order = c(1,1,2),
seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
c1 <- AICc(arima(c_train.bc, order = c(2,1,0),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
c2 <- AICc(arima(c_train.bc, order = c(2,1,0),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
c3 <- AICc(arima(c_train.bc, order = c(2,1,0),
seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
c4 <- AICc(arima(c_train.bc, order = c(2,1,0),
seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
c5 <- AICc(arima(c_train.bc, order = c(2,1,1),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
c6 <- AICc(arima(c_train.bc, order = c(2,1,1),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
c7 <- AICc(arima(c_train.bc, order = c(2,1,1),
seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
c8 <- AICc(arima(c_train.bc, order = c(2,1,1),
seasonal = list(order = c(2,1,3), period = 12), method = "ML"))
c9 <- AICc(arima(c_train.bc, order = c(2,1,2),
seasonal = list(order = c(0,1,1), period = 12), method = "ML"))
c10 <- AICc(arima(c_train.bc, order = c(2,1,2),
seasonal = list(order = c(0,1,3), period = 12), method = "ML"))
c11 <- AICc(arima(c_train.bc, order = c(2,1,2),
seasonal = list(order = c(2,1,1), period = 12), method = "ML"))
arima(c_train.bc, order = c(0,0,2), seasonal = list(order = c(0,2,2), period = 12), method = "ML")
polyroot(c(1, 1.0489))
# Plot the residuals
fit2 <- arima(c_train.bc, order = c(0,0,2),
seasonal = list(order = c(2,0,0), period = 12), method = "ML")
res2 <- residuals(fit2)
plot.ts(res2, xlab = "")
abline(h=mean(res2),col = "blue")
# Plot the histogram, Q-Q normal plot of the residual par(mfrow=c(1,2))
hist(res1, density = 20, breaks = 20,
col = "blue", xlab = "", prob = TRUE, main = "")
# Forecast with test dataset
plot.ts(data, xlim = c(2010,2025), ylim = c(0,7))
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
# Forecast with test dataset
plot.ts(data, xlim = c(2010,2025), ylim = c(0,7))
lines(U.tr, col = "blue", lty = "dashed")
lines(L.tr, col = "blue", lty = "dashed")
points(pred.tr$pred,col = "red", pch = 1)
points(c_test,col = "slategrey", pch = 20)
